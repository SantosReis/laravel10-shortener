name: Test Application

on:
  push:
    branches:
      - main

jobs:
  create-deployment-artifacts:
    name: Create deployment artifacts
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v3
      # - name: Compile CSS and Javascript
      #   run: |
      #     npm install
      #     npm run prod

      - name: Configure PHP 8.2
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.2
          extensions: mbstring, dom, fileinfo, mysql, libxml, xml, xmlwriter, dom, tokenizer, filter, json, phar, pcre, openssl, pdo, intl, curl

      - uses: actions/checkout@v3
      - name: Copy .env
        run: cp .env.example .env

      - name: Composer install
        # run: composer install --no-dev --no-interaction --prefer-dist
        run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate --force

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Run Migrations
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan migrate --force

      # - name: Directory Permissions
      #   run: chmod -R 777 storage bootstrap/cache

      # - name: Run migrations and seeders
      #   run: php artisan migrate:fresh --seed --force

      # - name: Run Pint
      #   run: ./vendor/bin/pint --test

      - name: Run Stan
        run: ./vendor/bin/phpstan analyse

      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        # run: php artisan test
        # run: ./vendor/bin/phpunit
        run: vendor/bin/phpunit tests/

      # - name: Create deployment artifact
      #   env:
      #     GITHUB_SHA: ${{ github.sha }}
      #   run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules *

      # - name: Store artifact for distribution
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: app-build
      #     path: ${{ github.sha }}.tar.gz
